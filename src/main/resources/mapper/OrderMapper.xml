<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ch.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.ch.entity.Order" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="delivery_date" property="deliveryDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="order_price" property="orderPrice" jdbcType="DECIMAL" />
    <result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
    <result column="pay_price" property="payPrice" jdbcType="DECIMAL" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="pay_id" property="payId" jdbcType="VARCHAR" />
    <result column="take_date" property="takeDate" jdbcType="TIMESTAMP" />
    <result column="order_type" property="orderType" jdbcType="VARCHAR" />
    <result column="delivery_id" property="deliveryId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, shop_id, user_id, order_status, create_date, delivery_date, modify_date, order_price, 
    pay_date, pay_price, pay_type, remark, status, pay_id, take_date, order_type, delivery_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ch.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ch.entity.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ch.entity.Order" >
    insert into order (id, shop_id, user_id, 
      order_status, create_date, delivery_date, 
      modify_date, order_price, pay_date, 
      pay_price, pay_type, remark, 
      status, pay_id, take_date, 
      order_type, delivery_id)
    values (#{id,jdbcType=VARCHAR}, #{shopId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{orderStatus,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{deliveryDate,jdbcType=TIMESTAMP}, 
      #{modifyDate,jdbcType=TIMESTAMP}, #{orderPrice,jdbcType=DECIMAL}, #{payDate,jdbcType=TIMESTAMP}, 
      #{payPrice,jdbcType=DECIMAL}, #{payType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{payId,jdbcType=VARCHAR}, #{takeDate,jdbcType=TIMESTAMP}, 
      #{orderType,jdbcType=VARCHAR}, #{deliveryId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ch.entity.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="deliveryDate != null" >
        delivery_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="payDate != null" >
        pay_date,
      </if>
      <if test="payPrice != null" >
        pay_price,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="takeDate != null" >
        take_date,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="deliveryId != null" >
        delivery_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null" >
        #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payPrice != null" >
        #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="takeDate != null" >
        #{takeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="deliveryId != null" >
        #{deliveryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ch.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryDate != null" >
        delivery_date = #{record.deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderPrice != null" >
        order_price = #{record.orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payPrice != null" >
        pay_price = #{record.payPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.payId != null" >
        pay_id = #{record.payId,jdbcType=VARCHAR},
      </if>
      <if test="record.takeDate != null" >
        take_date = #{record.takeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryId != null" >
        delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set id = #{record.id,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      delivery_date = #{record.deliveryDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      order_price = #{record.orderPrice,jdbcType=DECIMAL},
      pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      pay_id = #{record.payId,jdbcType=VARCHAR},
      take_date = #{record.takeDate,jdbcType=TIMESTAMP},
      order_type = #{record.orderType,jdbcType=VARCHAR},
      delivery_id = #{record.deliveryId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ch.entity.Order" >
    update order
    <set >
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null" >
        delivery_date = #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payPrice != null" >
        pay_price = #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="takeDate != null" >
        take_date = #{takeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="deliveryId != null" >
        delivery_id = #{deliveryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ch.entity.Order" >
    update order
    set shop_id = #{shopId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      delivery_date = #{deliveryDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      order_price = #{orderPrice,jdbcType=DECIMAL},
      pay_date = #{payDate,jdbcType=TIMESTAMP},
      pay_price = #{payPrice,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      pay_id = #{payId,jdbcType=VARCHAR},
      take_date = #{takeDate,jdbcType=TIMESTAMP},
      order_type = #{orderType,jdbcType=VARCHAR},
      delivery_id = #{deliveryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>