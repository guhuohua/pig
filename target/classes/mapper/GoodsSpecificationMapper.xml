<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ch.dao.GoodsSpecificationMapper" >
  <resultMap id="BaseResultMap" type="com.ch.entity.GoodsSpecification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="attrs" property="attrs" jdbcType="VARCHAR" />
    <result column="original_price" property="originalPrice" jdbcType="DECIMAL" />
    <result column="present_price" property="presentPrice" jdbcType="DECIMAL" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="sale" property="sale" jdbcType="INTEGER" />
    <result column="goods_image" property="goodsImage" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, shop_id, status, create_time, update_time, del_flag, attrs, original_price, present_price, 
    inventory, sn, sale, goods_image
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ch.entity.GoodsSpecificationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_specification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_specification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ch.entity.GoodsSpecificationExample" >
    delete from goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ch.entity.GoodsSpecification" >
    insert into goods_specification (id, shop_id, status, 
      create_time, update_time, del_flag, 
      attrs, original_price, present_price, 
      inventory, sn, sale, 
      goods_image)
    values (#{id,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=INTEGER}, 
      #{attrs,jdbcType=VARCHAR}, #{originalPrice,jdbcType=DECIMAL}, #{presentPrice,jdbcType=DECIMAL}, 
      #{inventory,jdbcType=INTEGER}, #{sn,jdbcType=VARCHAR}, #{sale,jdbcType=INTEGER}, 
      #{goodsImage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ch.entity.GoodsSpecification" >
    insert into goods_specification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="attrs != null" >
        attrs,
      </if>
      <if test="originalPrice != null" >
        original_price,
      </if>
      <if test="presentPrice != null" >
        present_price,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="sale != null" >
        sale,
      </if>
      <if test="goodsImage != null" >
        goods_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="attrs != null" >
        #{attrs,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null" >
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="presentPrice != null" >
        #{presentPrice,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="sale != null" >
        #{sale,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null" >
        #{goodsImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ch.entity.GoodsSpecificationExample" resultType="java.lang.Integer" >
    select count(*) from goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_specification
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.attrs != null" >
        attrs = #{record.attrs,jdbcType=VARCHAR},
      </if>
      <if test="record.originalPrice != null" >
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.presentPrice != null" >
        present_price = #{record.presentPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.inventory != null" >
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.sale != null" >
        sale = #{record.sale,jdbcType=INTEGER},
      </if>
      <if test="record.goodsImage != null" >
        goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_specification
    set id = #{record.id,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      attrs = #{record.attrs,jdbcType=VARCHAR},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      present_price = #{record.presentPrice,jdbcType=DECIMAL},
      inventory = #{record.inventory,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=VARCHAR},
      sale = #{record.sale,jdbcType=INTEGER},
      goods_image = #{record.goodsImage,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ch.entity.GoodsSpecification" >
    update goods_specification
    <set >
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="attrs != null" >
        attrs = #{attrs,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null" >
        original_price = #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="presentPrice != null" >
        present_price = #{presentPrice,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null" >
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="sale != null" >
        sale = #{sale,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null" >
        goods_image = #{goodsImage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ch.entity.GoodsSpecification" >
    update goods_specification
    set shop_id = #{shopId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER},
      attrs = #{attrs,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      present_price = #{presentPrice,jdbcType=DECIMAL},
      inventory = #{inventory,jdbcType=INTEGER},
      sn = #{sn,jdbcType=VARCHAR},
      sale = #{sale,jdbcType=INTEGER},
      goods_image = #{goodsImage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>